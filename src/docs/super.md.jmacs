@import './docs.jmacs'
@.{
  const factory = require('@graphy/core.data.factory');
  const h_prefixes = {xsd:'http://www.w3.org/2001/XMLSchema#', dbr:'http://dbpedia.org/resource/'};
}
@{api_title('Super Package')}
This document describes the 'super' package `graphy`.


### `npm i -g graphy`

<br />

### export **graphy** _extends_ [DataFactory](core.data.factory)

## Contents
 - [Functions](#functions)
   - [`.content(...)`](#function_content)
 - [Packages](#packages)
   - [`.content.nt.read(...)`](#package_content-nt-read)
   - [`.content.nt.scribe(...)`](#package_content-nt-scribe)
   - [`.content.nt.write(...)`](#package_content-nt-write)
   - [`.content.nq.read(...)`](#package_content-nq-read)
   - [`.content.nq.scribe(...)`](#package_content-nq-scribe)
   - [`.content.nq.write(...)`](#package_content-nq-write)
   - [`.content.ttl.read(...)`](#package_content-ttl-read)
   - [`.content.ttl.scribe(...)`](#package_content-ttl-scribe)
   - [`.content.ttl.write(...)`](#package_content-ttl-write)
   - [`.content.trig.read(...)`](#package_content-trig-read)
   - [`.content.trig.scribe(...)`](#package_content-trig-scribe)
   - [`.content.trig.write(...)`](#package_content-trig-write)
   - [`.memory.dataset.fast(...)`](#package_memory-dataset-fast)

<a name="functions" />

## Functions

<a name="function_content" />

 - `graphy.content(query: string)`
   - selects a group of content handlers identified by the given `query`, which may be a case-insensitive [Content-Type](https://www.w3.org/Protocols/rfc1341/4_Content-Type.html) (e.g., `'application/N-Triples'`) or the name of the package categroy (e.g., `'nq'`).
   - **returns** an object that contains, as keys, the _verbs_ available on the selected content-type, whose values reflect the corresponding package export. Will `throw` an Error if no content handler matches the provided `query`.
   - *example:*
      ```js
      const graphy = require('graphy');

      graphy.content('nt');  // { read: [Getter], write: [Getter] }

      graphy.content('text/turtle');  // { read: [Getter], write: [Getter] }
      ```

<a name="packages" />

@*{
  const H_FORMATS = {
    nt: {},
    nq: {},
    ttl: {},
    trig: {},
  };

  const A_VERBS = ['read', 'scribe', 'write'];

   for(let s_format of Object.keys(H_FORMATS)) {
      for(let s_verb of A_VERBS) {
         yield `
<a name="package_content-${s_format}-${s_verb}" />

 - \`graphy.content.${s_format}.${s_verb}(...)\`
   - See the [\`${s_verb} verb\`](content.textual#verb_${s_verb}) in [Reading and Writing](content.textual).
         `;
      }
   }
}

<a name="package_memory-dataset-fast" />

 - `graphy.memory.dataset.fast(...)`
   - See the [`FastDataset`](memory.dataset.fast) package.



