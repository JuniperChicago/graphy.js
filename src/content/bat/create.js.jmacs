@import './constants.jmacs'

const stream = require('stream');

const bkit = require('bkit');

// const decoders = require('@graphy/content.bat.decoders');
const primer = require('@graphy/content.bat.primer');
const serializer = require('@graphy/content.bat.serializer');

class creator extends stream.Writable {
	constructor(g_config={}) {
		super({
			objectMode: true,
		});

		let k_primer = new primer();

		Object.assign(this, {
			primer: k_primer,
			ready: g_config.ready,
		});

		this.on('finish', async() => {
			let k_serializer = new serializer(k_primer);

			let at_serialized = await k_serializer.buffer();

			this.ready(at_serialized);
		});
	}

	_write(g_quad, s_encoding, fk_write) {
		this.primer.save_triple(g_quad);
		fk_write();
	}

	_writev(a_quads, fk_write) {
		let k_primer = this.primer;
		for(let g_quad of a_quads) {
			k_primer.save_triple(g_quad);
		}

		fk_write();
	}
}

module.exports = function create(...a_args) {
	return new creator(...a_args);
};
